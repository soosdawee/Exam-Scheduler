============================== Mace4 =================================
Mace4 (64) version 2017-11A (CIIRC), November 2017.
Process 146440 was started by soosdavid on soosdavid,
Tue Dec 19 04:48:27 2023
The command was "mace4 -f programmer.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file programmer.in

assign(domain_size,7).
    % assign(domain_size, 7) -> assign(start_size, 7).
    % assign(domain_size, 7) -> assign(end_size, 7).
assign(max_models,-1).
set(arithmetic).
    % set(arithmetic) -> clear(lnh).
    % set(arithmetic) -> assign(selection_order, 0).

    % Declaring Mace4 arithmetic parse types.

formulas(programmer).
SUB1 = 1.
SUB2 = 2.
SUB3 = 3.
SUB4 = 4.
SUB5 = 5.
SUB6 = 6.
half = domain_size / 2.
f(y,half) = 0.
(exists x exists y f(x,y) = SUB3).
(exists x exists y f(x,y) = SUB2).
(exists x exists y f(x,y) = SUB1).
(exists x exists y f(x,y) = SUB4).
(exists x exists y f(x,y) = SUB5).
(exists x exists y f(x,y) = SUB6).
(all x1 all x2 all y1 all y2 (f(x1,y1) = SUB1 & f(x2,y2) = SUB1 -> x1 = x2 & y1 = y2)).
(all x1 all x2 all y1 all y2 (f(x1,y1) = SUB2 & f(x2,y2) = SUB2 -> x1 = x2 & y1 = y2)).
(all x1 all x2 all y1 all y2 (f(x1,y1) = SUB3 & f(x2,y2) = SUB3 -> x1 = x2 & y1 = y2)).
(all x1 all x2 all y1 all y2 (f(x1,y1) = SUB4 & f(x2,y2) = SUB4 -> x1 = x2 & y1 = y2)).
(all x1 all x2 all y1 all y2 (f(x1,y1) = SUB5 & f(x2,y2) = SUB5 -> x1 = x2 & y1 = y2)).
(all x1 all x2 all y1 all y2 (f(x1,y1) = SUB6 & f(x2,y2) = SUB6 -> x1 = x2 & y1 = y2)).
(all x1 all x2 all y (f(x1,y) = SUB1 -> f(x2,y) != SUB3 & f(x2,y) != SUB2 & f(x2,y) != SUB4 & f(x2,y) != SUB5 & f(x2,y) != SUB6)).
(all x1 all x2 all y (f(x1,y) = SUB2 -> f(x2,y) != SUB3 & f(x2,y) != SUB1 & f(x2,y) != SUB4 & f(x2,y) != SUB5 & f(x2,y) != SUB6)).
(all x1 all x2 all y (f(x1,y) = SUB3 -> f(x2,y) != SUB2 & f(x2,y) != SUB1 & f(x2,y) != SUB4 & f(x2,y) != SUB5 & f(x2,y) != SUB6)).
(all x1 all x2 all y (f(x1,y) = SUB4 -> f(x2,y) != SUB3 & f(x2,y) != SUB2 & f(x2,y) != SUB1 & f(x2,y) != SUB5 & f(x2,y) != SUB6)).
(all x1 all x2 all y (f(x1,y) = SUB5 -> f(x2,y) != SUB3 & f(x2,y) != SUB1 & f(x2,y) != SUB4 & f(x2,y) != SUB2 & f(x2,y) != SUB6)).
(all x1 all x2 all y (f(x1,y) = SUB6 -> f(x2,y) != SUB2 & f(x2,y) != SUB1 & f(x2,y) != SUB4 & f(x2,y) != SUB5 & f(x2,y) != SUB3)).
f(2,y) = 0.
f(0,0) = SUB1.
(all x all y (f(x,y) = SUB2 -> y = 5 & x = 4 | x = 1 & y != 5 & y != 6)).
(all x all y (f(x,y) = SUB3 -> x > 0 & x < 3 & y != 5 & y != 6)).
(all x all y (f(x,y) = SUB4 -> x = 1 & y != 5 & y != 6 | x = 2 & y = 5)).
(all x all y (f(x,y) = SUB5 -> x = 6 & y < 2)).
(all x all y (f(x,y) = SUB6 -> x = 2 & y = 5 | x = 0 & y = 1 | y = 6 & x = 4)).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (exists x exists y f(x,y) = SUB3) # label(non_clause).  [assumption].
2 (exists x exists y f(x,y) = SUB2) # label(non_clause).  [assumption].
3 (exists x exists y f(x,y) = SUB1) # label(non_clause).  [assumption].
4 (exists x exists y f(x,y) = SUB4) # label(non_clause).  [assumption].
5 (exists x exists y f(x,y) = SUB5) # label(non_clause).  [assumption].
6 (exists x exists y f(x,y) = SUB6) # label(non_clause).  [assumption].
7 (all x1 all x2 all y1 all y2 (f(x1,y1) = SUB1 & f(x2,y2) = SUB1 -> x1 = x2 & y1 = y2)) # label(non_clause).  [assumption].
8 (all x1 all x2 all y1 all y2 (f(x1,y1) = SUB2 & f(x2,y2) = SUB2 -> x1 = x2 & y1 = y2)) # label(non_clause).  [assumption].
9 (all x1 all x2 all y1 all y2 (f(x1,y1) = SUB3 & f(x2,y2) = SUB3 -> x1 = x2 & y1 = y2)) # label(non_clause).  [assumption].
10 (all x1 all x2 all y1 all y2 (f(x1,y1) = SUB4 & f(x2,y2) = SUB4 -> x1 = x2 & y1 = y2)) # label(non_clause).  [assumption].
11 (all x1 all x2 all y1 all y2 (f(x1,y1) = SUB5 & f(x2,y2) = SUB5 -> x1 = x2 & y1 = y2)) # label(non_clause).  [assumption].
12 (all x1 all x2 all y1 all y2 (f(x1,y1) = SUB6 & f(x2,y2) = SUB6 -> x1 = x2 & y1 = y2)) # label(non_clause).  [assumption].
13 (all x1 all x2 all y (f(x1,y) = SUB1 -> f(x2,y) != SUB3 & f(x2,y) != SUB2 & f(x2,y) != SUB4 & f(x2,y) != SUB5 & f(x2,y) != SUB6)) # label(non_clause).  [assumption].
14 (all x1 all x2 all y (f(x1,y) = SUB2 -> f(x2,y) != SUB3 & f(x2,y) != SUB1 & f(x2,y) != SUB4 & f(x2,y) != SUB5 & f(x2,y) != SUB6)) # label(non_clause).  [assumption].
15 (all x1 all x2 all y (f(x1,y) = SUB3 -> f(x2,y) != SUB2 & f(x2,y) != SUB1 & f(x2,y) != SUB4 & f(x2,y) != SUB5 & f(x2,y) != SUB6)) # label(non_clause).  [assumption].
16 (all x1 all x2 all y (f(x1,y) = SUB4 -> f(x2,y) != SUB3 & f(x2,y) != SUB2 & f(x2,y) != SUB1 & f(x2,y) != SUB5 & f(x2,y) != SUB6)) # label(non_clause).  [assumption].
17 (all x1 all x2 all y (f(x1,y) = SUB5 -> f(x2,y) != SUB3 & f(x2,y) != SUB1 & f(x2,y) != SUB4 & f(x2,y) != SUB2 & f(x2,y) != SUB6)) # label(non_clause).  [assumption].
18 (all x1 all x2 all y (f(x1,y) = SUB6 -> f(x2,y) != SUB2 & f(x2,y) != SUB1 & f(x2,y) != SUB4 & f(x2,y) != SUB5 & f(x2,y) != SUB3)) # label(non_clause).  [assumption].
19 (all x all y (f(x,y) = SUB2 -> y = 5 & x = 4 | x = 1 & y != 5 & y != 6)) # label(non_clause).  [assumption].
20 (all x all y (f(x,y) = SUB3 -> x > 0 & x < 3 & y != 5 & y != 6)) # label(non_clause).  [assumption].
21 (all x all y (f(x,y) = SUB4 -> x = 1 & y != 5 & y != 6 | x = 2 & y = 5)) # label(non_clause).  [assumption].
22 (all x all y (f(x,y) = SUB5 -> x = 6 & y < 2)) # label(non_clause).  [assumption].
23 (all x all y (f(x,y) = SUB6 -> x = 2 & y = 5 | x = 0 & y = 1 | y = 6 & x = 4)) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
SUB1 = 1.
SUB2 = 2.
SUB3 = 3.
SUB4 = 4.
SUB5 = 5.
SUB6 = 6.
half = domain_size / 2.
f(x,half) = 0.
f(c1,c2) = SUB3.
f(c3,c4) = SUB2.
f(c5,c6) = SUB1.
f(c7,c8) = SUB4.
f(c9,c10) = SUB5.
f(c11,c12) = SUB6.
f(x,y) != SUB1 | f(z,u) != SUB1 | z = x.
f(x,y) != SUB1 | f(z,u) != SUB1 | u = y.
f(x,y) != SUB2 | f(z,u) != SUB2 | z = x.
f(x,y) != SUB2 | f(z,u) != SUB2 | u = y.
f(x,y) != SUB3 | f(z,u) != SUB3 | z = x.
f(x,y) != SUB3 | f(z,u) != SUB3 | u = y.
f(x,y) != SUB4 | f(z,u) != SUB4 | z = x.
f(x,y) != SUB4 | f(z,u) != SUB4 | u = y.
f(x,y) != SUB5 | f(z,u) != SUB5 | z = x.
f(x,y) != SUB5 | f(z,u) != SUB5 | u = y.
f(x,y) != SUB6 | f(z,u) != SUB6 | z = x.
f(x,y) != SUB6 | f(z,u) != SUB6 | u = y.
f(x,y) != SUB1 | f(z,y) != SUB3.
f(x,y) != SUB1 | f(z,y) != SUB2.
f(x,y) != SUB1 | f(z,y) != SUB4.
f(x,y) != SUB1 | f(z,y) != SUB5.
f(x,y) != SUB1 | f(z,y) != SUB6.
f(x,y) != SUB2 | f(z,y) != SUB3.
f(x,y) != SUB2 | f(z,y) != SUB1.
f(x,y) != SUB2 | f(z,y) != SUB4.
f(x,y) != SUB2 | f(z,y) != SUB5.
f(x,y) != SUB2 | f(z,y) != SUB6.
f(x,y) != SUB3 | f(z,y) != SUB2.
f(x,y) != SUB3 | f(z,y) != SUB1.
f(x,y) != SUB3 | f(z,y) != SUB4.
f(x,y) != SUB3 | f(z,y) != SUB5.
f(x,y) != SUB3 | f(z,y) != SUB6.
f(x,y) != SUB4 | f(z,y) != SUB3.
f(x,y) != SUB4 | f(z,y) != SUB2.
f(x,y) != SUB4 | f(z,y) != SUB1.
f(x,y) != SUB4 | f(z,y) != SUB5.
f(x,y) != SUB4 | f(z,y) != SUB6.
f(x,y) != SUB5 | f(z,y) != SUB3.
f(x,y) != SUB5 | f(z,y) != SUB1.
f(x,y) != SUB5 | f(z,y) != SUB4.
f(x,y) != SUB5 | f(z,y) != SUB2.
f(x,y) != SUB5 | f(z,y) != SUB6.
f(x,y) != SUB6 | f(z,y) != SUB2.
f(x,y) != SUB6 | f(z,y) != SUB1.
f(x,y) != SUB6 | f(z,y) != SUB4.
f(x,y) != SUB6 | f(z,y) != SUB5.
f(x,y) != SUB6 | f(z,y) != SUB3.
f(2,x) = 0.
f(0,0) = SUB1.
f(x,y) != SUB2 | y = 5 | x = 1.
f(x,y) != SUB2 | y = 5 | y != 6.
f(x,y) != SUB2 | x = 4 | x = 1.
f(x,y) != SUB2 | x = 4 | y != 5.
f(x,y) != SUB2 | x = 4 | y != 6.
f(x,y) != SUB3 | x > 0.
f(x,y) != SUB3 | x < 3.
f(x,y) != SUB3 | y != 5.
f(x,y) != SUB3 | y != 6.
f(x,y) != SUB4 | x = 1 | x = 2.
f(x,y) != SUB4 | x = 1 | y = 5.
f(x,y) != SUB4 | y != 5 | x = 2.
f(x,y) != SUB4 | y != 6 | x = 2.
f(x,y) != SUB4 | y != 6 | y = 5.
f(x,y) != SUB5 | x = 6.
f(x,y) != SUB5 | y < 2.
f(x,y) != SUB6 | x = 2 | x = 0 | y = 6.
f(x,y) != SUB6 | x = 2 | x = 0 | x = 4.
f(x,y) != SUB6 | x = 2 | y = 1 | y = 6.
f(x,y) != SUB6 | x = 2 | y = 1 | x = 4.
f(x,y) != SUB6 | y = 5 | x = 0 | y = 6.
f(x,y) != SUB6 | y = 5 | x = 0 | x = 4.
f(x,y) != SUB6 | y = 5 | y = 1 | y = 6.
f(x,y) != SUB6 | y = 5 | y = 1 | x = 4.
end_of_list.

============================== end of clauses for search =============

% The largest natural number in the input is 6.

============================== DOMAIN SIZE 7 =========================

============================== MODEL =================================

interpretation( 7, [number=1, seconds=0], [

        function(SUB1, [ 1 ]),

        function(SUB2, [ 2 ]),

        function(SUB3, [ 3 ]),

        function(SUB4, [ 4 ]),

        function(SUB5, [ 5 ]),

        function(SUB6, [ 6 ]),

        function(half, [ 3 ]),

        function(c1, [ 1 ]),

        function(c2, [ 2 ]),

        function(c3, [ 4 ]),

        function(c4, [ 5 ]),

        function(c5, [ 0 ]),

        function(c6, [ 0 ]),

        function(c7, [ 1 ]),

        function(c8, [ 4 ]),

        function(c9, [ 6 ]),

        function(c10, [ 1 ]),

        function(c11, [ 4 ]),

        function(c12, [ 6 ]),

        function(f(_,_), [
			   1, 0, 0, 0, 0, 0, 0,
			   0, 0, 3, 0, 4, 0, 0,
			   0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 2, 6,
			   0, 0, 0, 0, 0, 0, 0,
			   0, 5, 0, 0, 0, 0, 0 ])
]).

============================== end of model ==========================

============================== MODEL =================================

interpretation( 7, [number=2, seconds=0], [

        function(SUB1, [ 1 ]),

        function(SUB2, [ 2 ]),

        function(SUB3, [ 3 ]),

        function(SUB4, [ 4 ]),

        function(SUB5, [ 5 ]),

        function(SUB6, [ 6 ]),

        function(half, [ 3 ]),

        function(c1, [ 1 ]),

        function(c2, [ 4 ]),

        function(c3, [ 4 ]),

        function(c4, [ 5 ]),

        function(c5, [ 0 ]),

        function(c6, [ 0 ]),

        function(c7, [ 1 ]),

        function(c8, [ 2 ]),

        function(c9, [ 6 ]),

        function(c10, [ 1 ]),

        function(c11, [ 4 ]),

        function(c12, [ 6 ]),

        function(f(_,_), [
			   1, 0, 0, 0, 0, 0, 0,
			   0, 0, 4, 0, 3, 0, 0,
			   0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 2, 6,
			   0, 0, 0, 0, 0, 0, 0,
			   0, 5, 0, 0, 0, 0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 7.

Current CPU time: 0.00 seconds (total CPU time: 0.09 seconds).
Ground clauses: seen=40306, kept=35316.
Selections=878, assignments=6146, propagations=2884, current_models=2.
Rewrite_terms=1398832, rewrite_bools=111768, indexes=6.
Rules_from_neg_clauses=2864, cross_offs=17453.

============================== end of statistics =====================

User_CPU=0.09, System_CPU=0.00, Wall_clock=0.

Exiting with 2 models.

Process 146440 exit (all_models) Tue Dec 19 04:48:27 2023
The process finished Tue Dec 19 04:48:27 2023
